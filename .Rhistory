interpreterResume <- DataInterpreter(averageResume,statisticalResume)
# RESUME LEXICAL PROCESS
i <- 1
vectorTrendDescriptionAnalysis <- c()
for(i in i:length(datasetWithoutDate)){
last2Index <- interpreter2Last$InterpreterIndex[i]
lastIndex <- interpreterLast$InterpreterIndex[i]
nowIndex <- interpreterNow$InterpreterIndex[i]
vectorSequenceIndex <- c(last2Index, lastIndex, nowIndex)
print(vectorSequenceIndex)
vectorTrendDescriptionAnalysis[i] <- LD_Compare(vectorSequenceIndex)
}
# i=1;
# # Today
# for (i in i:length(columnName)) {
#   cat(" Today", columnName[i], " :", as.character(unlist(interpreterNow[i])), "\n\n")
# }
# i=1;
# # Last
# for (i in i:length(columnName)) {
#   cat(" Last", columnName[i], " :", as.character(unlist(interpreterLast[i])), "\n\n")
# }
# i=1;
# # Resume
# for (i in i:length(columnName)) {
#   cat(" Resume", columnName[i], " :", as.character(unlist(interpreterResume[i])), "\n\n")
# }
#eventIntro <- ReadIntro(type="Event")
#resumeEvent <- paste(eventIntro,"6 value from Xth to Yth")
i <- 1
maxValue <- 0
maxIndex <- 0
for(i in i:length(listRepeatedAnalysisResult)){
if(listRepeatedAnalysisResult[[i]]$RepValue > maxValue){
maxValue <- listRepeatedAnalysisResult[[i]]$RepValue
maxIndex <- i
}
}
if(maxValue != 0){
i <- 1
vectorRepeatedInterpretResult <- c()
selectedColumn <- columnName[maxIndex]
for(i in i:length(listRepeatedAnalysisResult[[maxIndex]]$Start)){
selectedIndex <-listRepeatedAnalysisResult[[maxIndex]]$Start[i]
selectedValue <- datasetWithoutDate[[selectedColumn]][selectedIndex]
print(selectedValue)
vectorRepeatedInterpretResult[[i]] <- DataInterpreterAdjective(selectedValue, selectedColumn, statisticalResume)$InterpreterResult
}
}
resumeIntro <- ReadResumeIntro(dataset["DateTime"], columnName)
trendIntro <- ReadIntro(type="Trend")
resumeTrend <- paste0(trendIntro," ",ResumeTrend(statisticalResume),".")
if(maxValue != 0){
resumeRepeated <- ResumeRepeated2(columnName[[maxIndex]], dataset, vectorRepeatedInterpretResult, listRepeatedAnalysisResult[[maxIndex]]$Start, listRepeatedAnalysisResult[[maxIndex]]$End)
resumeRepeated <- paste("There were some repeated value more than 4 days: ", resumeRepeated)
}else{
resumeRepeated <- "There was no repeated values within 4 days or more, every value changed from time to time."
}
#
# currentIntro <- ChangeTimeDesc(ReadIntro(type="Current"),dataset["DateTime"])
# currentDesc <- CurrentDesc(interpreterNow, statisticalResume, dataset)
# currentAglast <- TrendAnalysis(length(dataset)-5, dataset[[2]])
# currentAgresume <- "and now is the higest from overall."
#
# predictIntro <- ReadIntro(type="Predict")
# predictContent <- "Content content content."
# predictConc <- "Conclussion from predict result."
resumeResult <- paste(resumeIntro, resumeTrend, resumeRepeated)
# currentResult <- paste(currentIntro, currentDesc, currentAglast, currentAgresume)
# currentResult <- paste(currentIntro, currentDesc)
# predictResult <- paste(predictIntro, predictContent, predictConc)
# source("D2T_Machine.R", local = TRUE)
resumeResult
# currentResult
# predictResult
vectorRepeatedInterpretResult
vectorRepeatedInterpretResult
setwd("~/GitHub/D2T_Apps")
#setwd("~/Programming/GitHub/D2T_Apps")
# INITIALIZING
source("D2T_Machine.R", local = TRUE)
# READ DATA
dataset <- read.table(file="Datasets/exc_2001.csv", sep=",", header=TRUE)
datasetWithoutDate <- dataset[ , colnames(dataset) != "DateTime"]
# airQualityDataset <- read.table(file="Datasets/AQ_2016_2017.csv", sep=",", header=TRUE)
#
columnName <- colnames(dataset[ , colnames(dataset) != "DateTime"])
# Predict
datasetPredicted <- PredictDataset(dataset)
# SYGNAL ANALYSIS
# row [N] data, now
datasetNow <- dataset[nrow(dataset), !colnames(dataset) == "DateTime"]
# row[N-1] data, before now
datasetLast <- dataset[nrow(dataset)-1, !colnames(dataset) == "DateTime"]
# row[N-1] data, before now
dataset2Last <- dataset[nrow(dataset)-2, !colnames(dataset) == "DateTime"]
# Average Resume
averageResume <- as.data.frame.list(colMeans(dataset[, !colnames(dataset) == "DateTime"]))
# Statistical Resume
statisticalResume <- StatisticalAnalysis(dataset)
i <- 1
vectorTrendAnalysisResult <- c()
for(i in i:length(datasetWithoutDate)){
vectorColumn <- datasetWithoutDate[[i]]
vectorTrendAnalysisResult[i] <- TrendAnalysis(1, vectorColumn)
}
#merging main analysis DF with trend column
statisticalResume$Trend <- vectorTrendAnalysisResult
#Repeated value analysis
i <- 1
listRepeatedAnalysisResult <- list()
vectorRepValueResult <- c()
for(i in i:length(datasetWithoutDate)){
vectorColumn <- datasetWithoutDate[[i]]
listRepeatedAnalysisResult[[i]] <- ResumeRepeatedAnalysis(vectorColumn)
vectorRepValueResult[i] <- listRepeatedAnalysisResult[[i]]$RepValue
}
#highsest growth analysis
i <- 1
vectorHighestGrowthAnalysisResult <- c()
vectorInterpreterRes <- list()
vectorInterpreterIndex <- c()
vectorStartIndex <- c()
vectorEndIndex <- c()
vectorGrowth <- c()
for(i in i:length(datasetWithoutDate)){
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult <- ResumeHighestGrowthAnalysis(diff(listColumn),"Decay")
vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
}
#ResumeHighestGrowth(vectorInterpreterRes)
# DATA INTERPRETATION
interpreterNow <- DataInterpreter(datasetNow,statisticalResume)
interpreterLast <- DataInterpreter(datasetLast,statisticalResume)
interpreter2Last <- DataInterpreter(dataset2Last, statisticalResume)
interpreterResume <- DataInterpreter(averageResume,statisticalResume)
# RESUME LEXICAL PROCESS
i <- 1
vectorTrendDescriptionAnalysis <- c()
for(i in i:length(datasetWithoutDate)){
last2Index <- interpreter2Last$InterpreterIndex[i]
lastIndex <- interpreterLast$InterpreterIndex[i]
nowIndex <- interpreterNow$InterpreterIndex[i]
vectorSequenceIndex <- c(last2Index, lastIndex, nowIndex)
print(vectorSequenceIndex)
vectorTrendDescriptionAnalysis[i] <- LD_Compare(vectorSequenceIndex)
}
# i=1;
# # Today
# for (i in i:length(columnName)) {
#   cat(" Today", columnName[i], " :", as.character(unlist(interpreterNow[i])), "\n\n")
# }
# i=1;
# # Last
# for (i in i:length(columnName)) {
#   cat(" Last", columnName[i], " :", as.character(unlist(interpreterLast[i])), "\n\n")
# }
# i=1;
# # Resume
# for (i in i:length(columnName)) {
#   cat(" Resume", columnName[i], " :", as.character(unlist(interpreterResume[i])), "\n\n")
# }
#eventIntro <- ReadIntro(type="Event")
#resumeEvent <- paste(eventIntro,"6 value from Xth to Yth")
i <- 1
maxValue <- 0
maxIndex <- 0
for(i in i:length(listRepeatedAnalysisResult)){
if(listRepeatedAnalysisResult[[i]]$RepValue > maxValue){
maxValue <- listRepeatedAnalysisResult[[i]]$RepValue
maxIndex <- i
}
}
if(maxValue != 0){
i <- 1
vectorRepeatedInterpretResult <- c()
selectedColumn <- columnName[maxIndex]
for(i in i:length(listRepeatedAnalysisResult[[maxIndex]]$Start)){
selectedIndex <-listRepeatedAnalysisResult[[maxIndex]]$Start[i]
selectedValue <- datasetWithoutDate[[selectedColumn]][selectedIndex]
print(selectedValue)
vectorRepeatedInterpretResult[[i]] <- DataInterpreterAdjective(selectedValue, selectedColumn, statisticalResume)$InterpreterResult
}
}
resumeIntro <- ReadResumeIntro(dataset["DateTime"], columnName)
trendIntro <- ReadIntro(type="Trend")
resumeTrend <- paste0(trendIntro," ",ResumeTrend(statisticalResume),".")
if(maxValue != 0){
resumeRepeated <- ResumeRepeated2(columnName[[maxIndex]], dataset, vectorRepeatedInterpretResult, listRepeatedAnalysisResult[[maxIndex]]$Start, listRepeatedAnalysisResult[[maxIndex]]$End)
resumeRepeated <- paste("There were some repeated value more than 4 days: ", resumeRepeated)
}else{
resumeRepeated <- "There was no repeated values within 4 days or more, every value changed from time to time."
}
#
# currentIntro <- ChangeTimeDesc(ReadIntro(type="Current"),dataset["DateTime"])
# currentDesc <- CurrentDesc(interpreterNow, statisticalResume, dataset)
# currentAglast <- TrendAnalysis(length(dataset)-5, dataset[[2]])
# currentAgresume <- "and now is the higest from overall."
#
# predictIntro <- ReadIntro(type="Predict")
# predictContent <- "Content content content."
# predictConc <- "Conclussion from predict result."
resumeResult <- paste(resumeIntro, resumeTrend, resumeRepeated)
# currentResult <- paste(currentIntro, currentDesc, currentAglast, currentAgresume)
# currentResult <- paste(currentIntro, currentDesc)
# predictResult <- paste(predictIntro, predictContent, predictConc)
# source("D2T_Machine.R", local = TRUE)
resumeResult
# currentResult
# predictResult
vectorRepeatedInterpretResult
vectorGrowth
vectorStartIndex
vectorEndIndex
vectorInterpreterIndex
dataset[["MYR"]][100]
dataset[["MYR"]][99:102]
#highsest growth analysis
i <- 1
vectorHighestGrowthAnalysisResult <- c()
vectorInterpreterRes <- list()
vectorInterpreterIndex <- c()
vectorStartIndex <- c()
vectorEndIndex <- c()
vectorGrowth <- c()
for(i in i:length(datasetWithoutDate)){
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult <- ResumeHighestGrowthAnalysis(diff(listColumn),"Growth")
vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
}
vectorGrowth
vectorStartIndex
vectorEndIndex
vectorInterpreterIndex
vectorInterpreterIndex+1
vectorEndIndex+1
dataset[[1]][79:82]
dataset[[2]][79:82]
dataset[[2]][79:83]
dataset[[2]][79:84]
i <- 1
for(i in i:length(datasetWithoutDate)){
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult <- ResumeHighestGrowthAnalysis(diff(listColumn),"Decay")
vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
}
#exception
vectorEndIndex <- vectorStartIndex + 1
vectorGrowth
vectorStartIndex
vectorEndIndex
datasetWithoutDate[[1]][86:87]
datasetWithoutDate[[1]][85:88]
diff(datasetWithoutDate[[1]][85:88])
diff(datasetWithoutDate[[1]][85:89])
diff(datasetWithoutDate[[1]][86:89])
diff(datasetWithoutDate[[1]][86:100])
diff(datasetWithoutDate[[1]][86:90)
diff(datasetWithoutDate[[1]][86:90])
diff(datasetWithoutDate[[1]][86:91])
diff(datasetWithoutDate[[1]][86:95])
datasetWithoutDate[[1]][85:88]
diff(datasetWithoutDate[[1]][86:95])
listHighestGrowthAnalysisResult
#highsest growth analysis
i <- 1
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult <- ResumeHighestGrowthAnalysis(diff(listColumn),"Decay")
vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
vectorInterpreterIndex
vectorGrowth
vectorStartIndex
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
vectorEndIndex
diff(datasetWithoutDate[[1]][86:95])
diff(datasetWithoutDate[[1]][85:95])
#highsest growth analysis
i <- 1
for(i in i:length(datasetWithoutDate)){
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult <- ResumeHighestGrowthAnalysis(diff(listColumn),"Decay")
vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
}
vectorStartIndex <- vectorStartIndex -1
vectorGrowth
vectorStartIndex
vectorEndIndex
diff(datasetWithoutDate[[1]][85:95])
#highsest growth analysis
i <- 1
for(i in i:length(datasetWithoutDate)){
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult <- ResumeHighestGrowthAnalysis(diff(listColumn),"Decay")
vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
}
diff(datasetWithoutDate[[1]][85:95])
vectorStartIndex
vectorEndIndex
diff(datasetWithoutDate[[1]][86:95])
diff(datasetWithoutDate[[1]][86:90])
#highsest growth analysis
i <- 1
for(i in i:length(datasetWithoutDate)){
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult <- ResumeHighestGrowthAnalysis(diff(listColumn),"Decay")
vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
}
vectorEndIndex <- vectorEndIndex+1
vectorStartIndex
vectorEndIndex
diff(datasetWithoutDate[[1]][86:91])
diff(datasetWithoutDate[[1]][85:92])
diff(datasetWithoutDate[[1]][128:137])
diff(datasetWithoutDate[[2]][128:137])
diff(datasetWithoutDate[[2]][128:138])
#highsest growth analysis
i <- 1
vectorHighestGrowthAnalysisResult <- c()
vectorInterpreterRes <- list()
vectorInterpreterIndex <- c()
vectorStartIndex <- c()
vectorEndIndex <- c()
vectorGrowth <- c()
for(i in i:length(datasetWithoutDate)){
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult <- ResumeHighestGrowthAnalysis(diff(listColumn),"Growth")
vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
}
data.frame(vectorGrowth, vectorStartIndex, vectorEndIndex, vectorInterpreterIndex)
listHighestGrowthAnalysisResult
as.data.frame(listHighestGrowthAnalysisResult)
#highsest growth analysis
i <- 1
vectorHighestGrowthAnalysisResult <- c()
listHighestGrowthAnalysisResult <- list()
vectorInterpreterRes <- list()
vectorInterpreterIndex <- c()
vectorStartIndex <- c()
vectorEndIndex <- c()
vectorGrowth <- c()
for(i in i:length(datasetWithoutDate)){
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult[[i]] <- ResumeHighestGrowthAnalysis(diff(listColumn),"Growth")
# vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
# vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
# vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
# vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
}
listHighestGrowthAnalysisResult
as.data.frame()
as.data.frame(listHighestGrowthAnalysisResult)
#highsest growth analysis
i <- 1
vectorHighestGrowthAnalysisResult <- c()
vectorInterpreterRes <- list()
vectorInterpreterIndex <- c()
vectorStartIndex <- c()
vectorEndIndex <- c()
vectorGrowth <- c()
for(i in i:length(datasetWithoutDate)){
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult[[i]] <- ResumeHighestGrowthAnalysis(diff(listColumn),"Growth")
vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
}
#highsest growth analysis
i <- 1
vectorHighestGrowthAnalysisResult <- c()
vectorInterpreterRes <- list()
vectorInterpreterIndex <- c()
vectorStartIndex <- c()
vectorEndIndex <- c()
vectorGrowth <- c()
for(i in i:length(datasetWithoutDate)){
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult <- ResumeHighestGrowthAnalysis(diff(listColumn),"Growth")
vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
}
dfHighsestGrowth <- data.frame(vectorGrowth, vectorStartIndex, vectorEndIndex, vectorInterpreterIndex)
dfHighsestGrowth
#highsest growth analysis
i <- 1
vectorHighestGrowthAnalysisResult <- c()
vectorInterpreterRes <- list()
vectorInterpreterIndex <- c()
vectorStartIndex <- c()
vectorEndIndex <- c()
vectorGrowth <- c()
for(i in i:length(datasetWithoutDate)){
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult <- ResumeHighestGrowthAnalysis(diff(listColumn),"Growth")
vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
}
vectorEndIndex <- vectorEndIndex + 1
dfHighsestGrowth <- data.frame(vectorGrowth, vectorStartIndex, vectorEndIndex, vectorInterpreterIndex)
dfHighsestGrowth
datasetWithoutDate[[1]][78:84]
diff(datasetWithoutDate[[1]][78:84])
diff(datasetWithoutDate[[1]][79:82])
diff(datasetWithoutDate[[2]][79:82])
diff(datasetWithoutDate[[2]][79:84])
#highsest growth analysis
i <- 1
vectorHighestGrowthAnalysisResult <- c()
vectorInterpreterRes <- list()
vectorInterpreterIndex <- c()
vectorStartIndex <- c()
vectorEndIndex <- c()
vectorGrowth <- c()
for(i in i:length(datasetWithoutDate)){
listColumn <- datasetWithoutDate[[i]]
listHighestGrowthAnalysisResult <- ResumeHighestGrowthAnalysis(diff(listColumn),"Growth")
vectorGrowth[i] <-listHighestGrowthAnalysisResult$valueResult
vectorStartIndex[i] <-listHighestGrowthAnalysisResult$startIndexResult
vectorEndIndex[i] <-listHighestGrowthAnalysisResult$endIndexResult
#vectorInterpreterRes[[i]] <- MembershipFuzzy(vectorGrowth, TrendFuzzyGenerator(columnName[i], statisticalResume))
vectorInterpreterIndex[i] <- MembershipFuzzy(vectorGrowth[i], TrendFuzzyGenerator(columnName[i], statisticalResume))$InterpreterIndex
}
vectorEndIndex <- vectorEndIndex + 1
dfHighsestGrowth <- data.frame(vectorGrowth, vectorStartIndex, vectorEndIndex, vectorInterpreterIndex)
dfHighsestGrowth
diff(datasetWithoutDate[[2]][79:84])
diff(datasetWithoutDate[[8]][73:78])
diff(datasetWithoutDate[[8]][74:77])
dfHighsestGrowth <- dfHighsestGrowth[dfHighsestGrowth$vectorInterpreterIndex == 5,]
dfHighsestGrowth
unlist(dfHighsestGrowth)
dfHighsestGrowth <- data.frame(vectorGrowth, vectorStartIndex, vectorEndIndex, vectorInterpreterIndex)
dfHighsestGrowth <- dfHighsestGrowth[[dfHighsestGrowth$vectorInterpreterIndex == 5,]]
dfHighsestGrowth <- dfHighsestGrowth[dfHighsestGrowth$vectorInterpreterIndex == 5,]
dfHighsestGrowth
diff(datasetWithoutDate[[8]][79:82])
diff(datasetWithoutDate[[8]][79:84])
diff(datasetWithoutDate[[2]][79:84])
dfHighsestGrowth
dfHighsestGrowth[2]
rownames(dfHighsestGrowth[2])
rownames(dfHighsestGrowth)
columnName
temp <- rownames(dfHighsestGrowth)
temp
temp <- temp[columnName[rownames(dfHighsestGrowth)]]
temp
columnName[rownames(dfHighsestGrowth)]
temp <- temp[columnName[[rownames(dfHighsestGrowth)]]]
temp <- rownames(dfHighsestGrowth)
match(rownames(dfHighsestGrowth), rownames(dfHighsestGrowth))
match(rownames(dfHighsestGrowth), columnName)
help(apply)
temp
apply(temp, rep(1,length(vectorGrowth))
length(vectorGrowth))
rep(1,length(vectorGrowth))
dfHighsestGrowth <- data.frame(vectorGrowth, vectorStartIndex, vectorEndIndex, vectorInterpreterIndex)
dfHighsestGrowth <- dfHighsestGrowth[dfHighsestGrowth$vectorInterpreterIndex == 5,]
dfHighsestGrowth$colName <- rownames(dfHighsestGrowth)
dfHighsestGrowth
apply(dfHighsestGrowth, 5, function(v) "SKIP")
apply(dfHighsestGrowth, 5, sum)
apply(dfHighsestGrowth, 5, sum)
apply(dfHighsestGrowth, 2, sum)
apply(dfHighsestGrowth, 1, sum)
apply(dfHighsestGrowth, 1, print)
apply(dfHighsestGrowth, 2, print)
apply(dfHighsestGrowth, 5, print)
apply(dfHighsestGrowth, 4, print)
apply(dfHighsestGrowth, 3, print)
apply(dfHighsestGrowth, 1, print)
